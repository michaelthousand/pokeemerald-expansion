mapscripts Prometheus_Tech_Lab_MapScripts { }

script Prometheus_Tech_Lab_EventScript_ExpShare{
    lockall
    faceplayer

    if (!(flag(FLAG_EXP_SHARE_ON))){
        msgbox("I've developed a tool that let's all of\nyour Pokemon gain experience from battles.", MSGBOX_AUTOCLOSE)
        msgbox("Would you like me to turn it on?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == YES) {
            setflag(FLAG_EXP_SHARE_ON)
            msgbox("There you go! Exp share active!", MSGBOX_AUTOCLOSE)
            msgbox("Talk to me again if you want to\nturn it off.", MSGBOX_AUTOCLOSE)
        } else {
            msgbox("Maybe another time.", MSGBOX_AUTOCLOSE)
            Return
        }
    } else {
        msgbox("Want to turn exp share off?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == YES) {
            clearflag(FLAG_EXP_SHARE_ON)
            msgbox("I guess you prefer grinding...", MSGBOX_AUTOCLOSE)
        } else {
            msgbox("Easy mode remains active.", MSGBOX_AUTOCLOSE)
            Return
        }
    }

    releaseall
    end
}

script Prometheus_Tech_Lab_EventScript_Tera {
    lock
    faceplayer
    msgbox("Hello! If you bring me Tera Shards, I\ncan change the Tera Tye of your Pokemon.", MSGBOX_AUTOCLOSE)
    msgbox("I'll need 20 tera shards of a particular\ntype to make it work.", MSGBOX_AUTOCLOSE)
    msgbox("Let's see what shards you have...", MSGBOX_AUTOCLOSE)
    delay(60)

    if (var(VAR_NORMAL_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Normal?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_NORMAL, slot=VAR_0x8004)
            removeitem(ITEM_NORMAL_TERA_SHARD, 20)
            addvar(VAR_NORMAL_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Normal.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_FIRE_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Fire?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_FIRE, slot=VAR_0x8004)
            removeitem(ITEM_FIRE_TERA_SHARD, 20)
            addvar(VAR_FIRE_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Fire.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_WATER_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Water?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_WATER, slot=VAR_0x8004)
            removeitem(ITEM_WATER_TERA_SHARD, 20)
            addvar(VAR_WATER_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Water.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_ELECTRIC_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Electric?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_ELECTRIC, slot=VAR_0x8004)
            removeitem(ITEM_ELECTRIC_TERA_SHARD, 20)
            addvar(VAR_ELECTRIC_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Electric.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_GRASS_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Grass?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_GRASS, slot=VAR_0x8004)
            removeitem(ITEM_GRASS_TERA_SHARD, 20)
            addvar(VAR_GRASS_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Grass.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_ICE_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Ice?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_ICE, slot=VAR_0x8004)
            removeitem(ITEM_ICE_TERA_SHARD, 20)
            addvar(VAR_ICE_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Ice.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_FIGHTING_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Fighting?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_FIGHTING, slot=VAR_0x8004)
            removeitem(ITEM_FIGHTING_TERA_SHARD, 20)
            addvar(VAR_FIGHTING_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Fighting.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_POISON_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Poison?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_POISON, slot=VAR_0x8004)
            removeitem(ITEM_POISON_TERA_SHARD, 20)
            addvar(VAR_POISON_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Poison.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_GROUND_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Ground?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_GROUND, slot=VAR_0x8004)
            removeitem(ITEM_GROUND_TERA_SHARD, 20)
            addvar(VAR_GROUND_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Ground.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_FLYING_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Flying?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_FLYING, slot=VAR_0x8004)
            removeitem(ITEM_FLYING_TERA_SHARD, 20)
            addvar(VAR_FLYING_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Fying.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_PSYCHIC_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Psychic?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_PSYCHIC, slot=VAR_0x8004)
            removeitem(ITEM_PSYCHIC_TERA_SHARD, 20)
            addvar(VAR_PSYCHIC_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Psychic.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_BUG_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Bug?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_BUG, slot=VAR_0x8004)
            removeitem(ITEM_BUG_TERA_SHARD, 20)
            addvar(VAR_BUG_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Bug.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_ROCK_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Rock?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_ROCK, slot=VAR_0x8004)
            removeitem(ITEM_ROCK_TERA_SHARD, 20)
            addvar(VAR_ROCK_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Rock.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_GHOST_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Ghost?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_GHOST, slot=VAR_0x8004)
            removeitem(ITEM_GHOST_TERA_SHARD, 20)
            addvar(VAR_GHOST_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Ghost.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_DRAGON_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Dragon?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_DRAGON, slot=VAR_0x8004)
            removeitem(ITEM_DRAGON_TERA_SHARD, 20)
            addvar(VAR_DRAGON_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Dragon.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_DARK_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Dark?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_DARK, slot=VAR_0x8004)
            removeitem(ITEM_DARK_TERA_SHARD, 20)
            addvar(VAR_DARK_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Dark.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_STEEL_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Steel?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_STEEL, slot=VAR_0x8004)
            removeitem(ITEM_STEEL_TERA_SHARD, 20)
            addvar(VAR_STEEL_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Steel.", MSGBOX_DEFAULT)
            waitmessage
        }
    } elif (var(VAR_FAIRY_SHARDS) >= 20) {
        msgbox("Would you like to change the Tera Type\nof one of your Pokemon to Fairy?", MSGBOX_YESNO)
        if(var(VAR_RESULT) == YES){
            msgbox("Pick a Pokemon to set its Tera type.")
            callnative(ChoosePartyMon)
            waitstate
            setteratype(type=TYPE_FAIRY, slot=VAR_0x8004)
            removeitem(ITEM_FAIRY_TERA_SHARD, 20)
            addvar(VAR_FAIRY_SHARDS, -20)
            msgbox("Your Pokemon's tera type is now Fairy.", MSGBOX_DEFAULT)
            waitmessage
        }
    } else {
        msgbox("Come back if you find more shards.", MSGBOX_AUTOCLOSE)
    }

    release
    end
}

script Prometheus_Tech_Lab_EventScript_Nature {
    lock
    faceplayer

    msgbox("Do you want an experimental mint to\nchange the nature of your pokemon?", MSGBOX_YESNO)
    if (var(VAR_RESULT) != YES) {
        msgbox("Maybe next time.")
        goto(Done)
    }

    msgbox("What stat would you like to raise?")
    goto(MintMenu1)

    MintMenu1:
        multichoice(20, 0, MINT_CHOICE_P1, 0)
        if (var(VAR_RESULT) == MULTI_B_PRESSED) {
            goto(Done)
        } elif (var(VAR_RESULT) == 0) { // Attack
            msgbox("What stat should we lower to raise\nattack?")
            goto(AttackMints)
        } elif (var(VAR_RESULT) == 1) { // Defense
            msgbox("What stat should we lower to raise\ndefense?")
            goto(DefenseMints)
        } elif (var(VAR_RESULT) == 2) { // Sp. Atk
            msgbox("What stat should we lower to raise\nsp. attack?")
            goto(SpAttackMints)
        } elif (var(VAR_RESULT) == 3) { // Sp. Def
            msgbox("What stat should we lower to raise\nsp. defense?")
            goto(SpDefenseMints)
        } elif (var(VAR_RESULT) == 4) { // Speed
            msgbox("What stat should we lower to raise\nspeed?")
            goto(SpeedMints)
        } elif (var(VAR_RESULT) == 5) { // Serious (neutral)
            msgbox("Here's a serious mint", MSGBOX_DEFAULT)
            giveitem(ITEM_SERIOUS_MINT, 1)
            goto(Done)
        } else {
            goto(Done)
        }

    AttackMints:
        multichoice(20, 0, MINT_CHOICE_P2, 0)
        if (var(VAR_RESULT) == MULTI_B_PRESSED) {
            goto(Done)
        } elif (var(VAR_RESULT) == 0) {
            msgbox("Here's a lonely mint", MSGBOX_DEFAULT)
            giveitem(ITEM_LONELY_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 1) {
            msgbox("Here's an adamant mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_ADAMANT_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 2) {
            msgbox("Here's a naughty mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_NAUGHTY_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 3) {
            msgbox("Here's a brave mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_BRAVE_MINT, 1)
            goto(Done)
        } else {
            goto(Done)
        }

    DefenseMints:
        multichoice(20, 0, MINT_CHOICE_P3, 0)
        if (var(VAR_RESULT) == MULTI_B_PRESSED) {
            goto(Done)
        } elif (var(VAR_RESULT) == 0) {
            msgbox("Here's a bold mint", MSGBOX_DEFAULT)
            giveitem(ITEM_BOLD_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 1) {
            msgbox("Here's an impish mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_IMPISH_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 2) {
            msgbox("Here's a lax mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_LAX_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 3) {
            msgbox("Here's a relaxed mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_RELAXED_MINT, 1)
            goto(Done)
        } else {
            goto(Done)
        }

    SpAttackMints:
        multichoice(20, 0, MINT_CHOICE_P4, 0)
        if (var(VAR_RESULT) == MULTI_B_PRESSED) {
            goto(Done)
        } elif (var(VAR_RESULT) == 0) {
            msgbox("Here's a modest mint", MSGBOX_DEFAULT)
            giveitem(ITEM_MODEST_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 1) {
            msgbox("Here's a mild mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_MILD_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 2) {
            msgbox("Here's a rash mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_RASH_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 3) {
            msgbox("Here's a quiet mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_QUIET_MINT, 1)
            goto(Done)
        } else {
            goto(Done)
        }

    SpDefenseMints:
        multichoice(20, 0, MINT_CHOICE_P5, 0)
        if (var(VAR_RESULT) == MULTI_B_PRESSED) {
            goto(Done)
        } elif (var(VAR_RESULT) == 0) {
            msgbox("Here's a calm mint", MSGBOX_DEFAULT)
            giveitem(ITEM_CALM_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 1) {
            msgbox("Here's a gentle mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_GENTLE_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 2) {
            msgbox("Here's a careful mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_CAREFUL_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 3) {
            msgbox("Here's a sassy mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_SASSY_MINT, 1)
            goto(Done)
        } else {
            goto(Done)
        }

    SpeedMints:
        multichoice(20, 0, MINT_CHOICE_P6, 0)
        if (var(VAR_RESULT) == MULTI_B_PRESSED) {
            goto(Done)
        } elif (var(VAR_RESULT) == 0) {
            msgbox("Here's a timid mint", MSGBOX_DEFAULT)
            giveitem(ITEM_TIMID_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 1) {
            msgbox("Here's a hasty mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_HASTY_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 2) {
            msgbox("Here's a jolly mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_JOLLY_MINT, 1)
            goto(Done)
        } elif (var(VAR_RESULT) == 3) {
            msgbox("Here's a naive mint.", MSGBOX_DEFAULT)
            giveitem(ITEM_NAIVE_MINT, 1)
            goto(Done)
        } else {
            goto(Done)
        }

    Done:
        release
        end
}
