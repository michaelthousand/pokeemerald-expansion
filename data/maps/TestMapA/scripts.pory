raw `
TestMapA_MapScripts::
    map_script MAP_SCRIPT_ON_TRANSITION, TestMapA_OnTransition

TestMapA_OnTransition:
    call_if_unset TALKED_TO_CINDER, TestMapA_EventScript_SetupTestBattle

`

script TestMapA_EventScript_SetupTestBattle{
    if(!(flag(STARTER_BALL_ONE) || flag(STARTER_BALL_TWO) || flag(STARTER_BALL_THREE))){
        setflag(TALKED_TO_CINDER)
        setvar(TESTMAPA_STATE, 0)
    }
    else{
        if(var(TESTMAPA_STATE) == 0){
            clearflag(TALKED_TO_CINDER)
        }
    }
}

script MayBattleOver{
    lockall
    applymovement(1, MayLeave)
    waitmovement(0)
    removeobject(1)
    setflag(TALKED_TO_CINDER)
    setvar(TESTMAPA_STATE, 1)
    waitmessage
    releaseall
}

movement MayLeave{
    walk_down
    walk_left * 7
}

text May_Intro{
    "You'll never win!"
}

text May_Outro{
    "Okay, you won"
}

text PostBattle_May{
    "I'll win next time"
}


script TestMapA_EventScript_Kyogre{
    lockall
    playmoncry(SPECIES_KYOGRE, CRY_MODE_ENCOUNTER)
    delay(40)
    waitmoncry
    setwildbattle(SPECIES_KYOGRE, 15, ITEM_BLUE_ORB)
    dowildbattle
    specialvar(VAR_RESULT, GetBattleOutcome)
    if(var(VAR_RESULT)==B_OUTCOME_CAUGHT){
        call(Won_or_Caught)
    }
    elif(var(VAR_RESULT) == B_OUTCOME_WON){
        call(Won_or_Caught)
    }
    elif(var(VAR_RESULT) ==B_OUTCOME_RAN){
        call(RanAway)
    }
    elif(var(VAR_RESULT) == B_OUTCOME_PLAYER_TELEPORTED){
        call(RanAway)
    }
    waitmessage
    releaseall
}

script Won_or_Caught{
    fadescreen(FADE_TO_BLACK)
    removeobject(2)
    fadescreen(FADE_FROM_BLACK)
    msgbox("You are the Pokemon Master")
    return
}

script RanAway{
    playmoncry(SPECIES_KYOGRE, CRY_MODE_ENCOUNTER)
    msgbox("Kyuhh...", MSGBOX_AUTOCLOSE)
    delay(20)
    fadescreen(FADE_TO_BLACK)
    removeobject(2)
    fadescreen(FADE_FROM_BLACK)
    msgbox("You are not the Pokemon Master")
    return
}


script TestMapA_Trigger_BlockPath{
    lockall
    msgbox("You don't have a Pokemon yet")
    applymovement(OBJ_EVENT_ID_PLAYER, StopPlayer)
    waitmovement(0)
    releaseall
}

movement StopPlayer{
    walk_down
}