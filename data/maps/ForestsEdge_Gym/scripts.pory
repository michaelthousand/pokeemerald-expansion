mapscripts ForestsEdge_Gym_MapScripts {
    MAP_SCRIPT_ON_TRANSITION: ForestsEdge_Gym_OnTransition
}

script ForestsEdge_Gym_OnTransition {
    setflag(FLAG_MORWEN)
    setflag(FLAG_KAELEN)
    end
}

script ForestsEdge_Gym_Trigger_Right {
    lockall
    applymovement(OBJ_EVENT_ID_PLAYER, Enter_Gym_Right)
    waitmovement(0)
    delay(180)
    clearflag(FLAG_MORWEN)
    addobject(LOCALID_MORWEN)
    applymovement(LOCALID_MORWEN, Morwen_Enter)
    waitmovement(0)
    delay(60)
    goto(ForestsEdge_Gym_EventScript_Morwen)
}

movement Enter_Gym_Right {
    walk_up * 5
    walk_right * 4
    walk_up * 6
    walk_left
}

script ForestsEdge_Gym_Trigger_Left {
    lockall
    applymovement(OBJ_EVENT_ID_PLAYER, Enter_Gym_Left)
    waitmovement(0)
    delay(180)
    clearflag(FLAG_MORWEN)
    addobject(LOCALID_MORWEN)
    applymovement(LOCALID_MORWEN, Morwen_Enter)
    waitmovement(0)
    delay(60)
    goto(ForestsEdge_Gym_EventScript_Morwen)
}

movement Enter_Gym_Left {
    walk_up * 5
    walk_right * 5
    walk_up * 6
    walk_left
}

script ForestsEdge_Gym_Trigger_One {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_One)
        goto(ForestsEdgeGym_EventScript_Rules)
    }
}

script ForestsEdge_Gym_Trigger_Two {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_Two)
        goto(ForestsEdgeGym_EventScript_Rules)
    }
}

script ForestsEdge_Gym_Trigger_Three {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_Three)
        goto(ForestsEdgeGym_EventScript_Rules)
    }
}

script ForestsEdge_Gym_Trigger_Four {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_Four)
        goto(ForestsEdgeGym_EventScript_Rules)
    }
}

movement Exit_Gym {
    walk_right
    walk_down *6
    walk_left * 5
    walk_down * 8
}

movement Gym_Rules_One {
    walk_down * 2
    walk_left * 3
    face_up
}

movement Gym_Rules_Two {
    walk_down * 2
    walk_left * 4
    face_up
}

movement Gym_Rules_Three {
    walk_down * 2
    walk_left * 5
    face_up
}

movement Gym_Rules_Four {
    walk_down * 2
    walk_left * 6
    face_up
}

movement Morwen_Enter {
    walk_down
    walk_left * 9
    walk_down * 2
    walk_right
}

movement Morwen_Exit {
    walk_left
    walk_up * 2
    walk_right * 9
    walk_up
}

movement Kaelen_Enter {
    walk_down * 3
    walk_right
}

movement Kaelen_Exit {
    walk_left
    walk_up * 3
}


script ForestsEdgeGym_EventScript_Rules {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        faceplayer

        msgbox("Welcome, challenger. Allow me to explain\nhow Gyms work here in Valora.", MSGBOX_DEFAULT)

        msgbox("Each Gym has two Leaders, and each one\nspecializes in different styles.", MSGBOX_DEFAULT)
        msgbox("There are no junior trainers in our gyms.", MSGBOX_DEFAULT)
        msgbox("You must defeat both Leaders to earn\na badge.", MSGBOX_DEFAULT)
        msgbox("If you lose to either leader, you will\nneed to rebattle both.", MSGBOX_DEFAULT)

        msgbox("Battles are 4v4 double battles. You will\nhave a chance to see your opponent's\pPokemon before selecting from your\nown party.", MSGBOX_DEFAULT)
        msgbox("You can cancel the battle only before\nthe first gym leader to return to the\plobby and change your team.", MSGBOX_DEFAULT)
        msgbox("There's a computer to your left for this\nvery purpose.", MSGBOX_DEFAULT)
        msgbox("Between the battles, you won’t be\nallowed to change your party Pokemon.", MSGBOX_DEFAULT)
        msgbox("However, your Pokémon will be fully\nhealed before facing the second Leader.", MSGBOX_DEFAULT)
        msgbox("And you will be able to select \nnew group of four for the second battle.", MSGBOX_DEFAULT)

        msgbox("Earning a badge will also award you\npoints toward qualifying for the\pRegional Championship.", MSGBOX_DEFAULT)
        msgbox("Your first opponent is Morwen.\pShe specializes in sleep and paralysis.", MSGBOX_DEFAULT)
        msgbox("Your second opponent is Kaelen.\pHe specializes in poison and burns.", MSGBOX_DEFAULT)
        msgbox("You have 0 badges so you are in Tier C.\pYour opponent's will not bring their best\nteams.", MSGBOX_DEFAULT)
        msgbox("But be sure to still bring a balanced\nteam...you’ll need it!", MSGBOX_DEFAULT)


        msgbox("Good luck!", MSGBOX_DEFAULT)
        setflag(FLAG_GYM_RULES)
    } else {
        msgbox("Welcome, challenger, to the Forest's Edge\nGym!", MSGBOX_DEFAULT)
        msgbox("Your first opponent is Morwen.\pShe specializes in sleep and paralysis.", MSGBOX_DEFAULT)
        msgbox("Your second opponent is Kaelen.\pHe specializes in poison and burns.", MSGBOX_DEFAULT)

        if (var(VAR_BADGES) < 2) {
            msgbox("You are in Tier C.\pYour opponent's will not bring their best\nteams.", MSGBOX_DEFAULT)
        } elif (var(VAR_BADGES) < 6) {
            msgbox("You are in Tier B.\pYour opponent's will not bring their best\nteams...\pbut they will step up their game.", MSGBOX_DEFAULT)
        } elif (var(VAR_BADGES) > 5) {
            msgbox("You are in Tier A.\pYour opponent's will not pull any punches.", MSGBOX_DEFAULT)
        }

        msgbox("Good luck!", MSGBOX_DEFAULT)
    }

    releaseall
    end
}


script ForestsEdge_Gym_EventScript_Morwen {
    if (var(VAR_BADGES) < 2) {
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_SLOWPOKE_GALAR)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_TOEDSCOOL)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_EKANS)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_MAGNEMITE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_SNORLAX)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_PIKACHU)
        if (var(VAR_BADGES) == 0){
            setvar(VAR_VGC_PREVIEW_LV, 21)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 29)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 0) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_C1)
            trainerbattle_double(TRAINER_MORWEN_C1, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_C2)
            trainerbattle_double(TRAINER_MORWEN_C2, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        }

    } elif ((var(VAR_BADGES) > 1) && (var(VAR_BADGES) < 5)){
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_DONDOZO)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_URSALUNA)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_SANDACONDA)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_MAGNEZONE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_TOEDSCRUEL)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_RAICHU_ALOLA)
        if (var(VAR_BADGES) == 2){
            setvar(VAR_VGC_PREVIEW_LV, 41)  // preview level
        } elif (var(VAR_BADGES) == 3){
            setvar(VAR_VGC_PREVIEW_LV, 49)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 56)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 2) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_B1)
            trainerbattle_double(TRAINER_MORWEN_B1, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        } elif (var(VAR_BADGES) == 3){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_B2)
            trainerbattle_double(TRAINER_MORWEN_B2, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_B3)
            trainerbattle_double(TRAINER_MORWEN_B3, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        }
    } elif ((var(VAR_BADGES) > 4) && (var(VAR_BADGES) < 8)){
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_AMOONGUSS)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_URSALUNA)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_SANDACONDA)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_MAGNEZONE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_TOEDSCRUEL)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_DRAGONITE)
        if (var(VAR_BADGES) == 5){
            setvar(VAR_VGC_PREVIEW_LV, 64)  // preview level
        } elif (var(VAR_BADGES) == 6){
            setvar(VAR_VGC_PREVIEW_LV, 71)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 78)  // preview level

        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 5) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_A1)
            trainerbattle_double(TRAINER_MORWEN_A1, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        } elif (var(VAR_BADGES) == 6){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_A2)
            trainerbattle_double(TRAINER_MORWEN_A2, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_MORWEN_A3)
            trainerbattle_double(TRAINER_MORWEN_A3, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
        }
    } else {
        setvar(VAR_VGC_PREVIEW_0, SPECIES_BRUTE_BONNET)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_URSALUNA_BLOODMOON)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_DONDOZO)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_DRAGONITE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_SANDACONDA)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_REGIELEKI)
        
        setvar(VAR_VGC_PREVIEW_LV, 85)  // preview level

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        special(WeightedSelector_On)
        cleartrainerflag(TRAINER_MORWEN_S)
        trainerbattle_double(TRAINER_MORWEN_S, Morwen_Intro, Morwen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Morwen, NO_MUSIC)
    }
}


script ForestsEdge_Gym_After_Morwen {
    special(WeightedSelector_Off)
    special(HealPlayerParty)
    msgbox("Your Pokemon have been healed.", MSGBOX_AUTOCLOSE)

    giveitem(ITEM_TM_TAUNT, 1)
    msgbox("That TM contains Taunt.", MSGBOX_AUTOCLOSE)
    msgbox("That will help you avoid getting\nput to sleep in the future.", MSGBOX_AUTOCLOSE)

    msgbox(PostBattle_Morwen, MSGBOX_AUTOCLOSE)

    special(Vgc_RestorePartyBackup) 
    clearflag(FLAG_VGC_PENDING_RESTORE)

    applymovement(LOCALID_MORWEN, Morwen_Exit)
    waitmovement(0)
    setflag(FLAG_MORWEN)
    removeobject(LOCALID_MORWEN)

    delay(150)
    clearflag(FLAG_KAELEN)
    addobject(1)
    delay(60)
    applymovement(1, Kaelen_Enter)
    waitmovement(0)

    goto(ForestsEdge_Gym_EventScript_Kaelen)
}

script ForestsEdge_Gym_EventScript_Kaelen {
    if (var(VAR_BADGES) < 2) {
        setvar(VAR_VGC_PREVIEW_0, SPECIES_SALANDIT)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_KOFFING)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_TREVENANT)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_ARMAROUGE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_ZUBAT)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_GRIMER_ALOLA)
        if (var(VAR_BADGES) == 0){
            setvar(VAR_VGC_PREVIEW_LV, 21)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 29)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        if (var(VAR_BADGES) == 0)  {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_C1)
            trainerbattle_double(TRAINER_KAELEN_C1, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_C2)
            trainerbattle_double(TRAINER_KAELEN_C2, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        }

    } elif ((var(VAR_BADGES) > 1) && (var(VAR_BADGES) < 5)){
        setvar(VAR_VGC_PREVIEW_0, SPECIES_SALAZZLE)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_WEEZING_GALAR)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_TREVENANT)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_ARCANINE_HISUI)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_CROBAT)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_MUK_ALOLA)
        if (var(VAR_BADGES) == 2){
            setvar(VAR_VGC_PREVIEW_LV, 41)  // preview level
        } elif (var(VAR_BADGES) == 3){
            setvar(VAR_VGC_PREVIEW_LV, 49)  // preview level
        } elif (var(VAR_BADGES) == 4){
            setvar(VAR_VGC_PREVIEW_LV, 56)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        if (var(VAR_BADGES) == 2)  {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_B1)
            trainerbattle_double(TRAINER_KAELEN_B1, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        } elif (var(VAR_BADGES) == 3){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_B2)
            trainerbattle_double(TRAINER_KAELEN_B2, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        } elif (var(VAR_BADGES) == 4){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_B3)
            trainerbattle_double(TRAINER_KAELEN_B3, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        }

    } elif ((var(VAR_BADGES) > 4) && (var(VAR_BADGES) < 8)){
        setvar(VAR_VGC_PREVIEW_0, SPECIES_TALONFLAME)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_WEEZING_GALAR)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_OVERQWIL)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_GLIMMORA)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_ARCANINE_HISUI)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_DRAGAPULT)
        if (var(VAR_BADGES) == 5){
            setvar(VAR_VGC_PREVIEW_LV, 61)  // preview level
        } elif (var(VAR_BADGES) == 6){
            setvar(VAR_VGC_PREVIEW_LV, 71)  // preview level
        } elif (var(VAR_BADGES) == 7){
            setvar(VAR_VGC_PREVIEW_LV, 78)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        if (var(VAR_BADGES) == 5)  {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_A1)
            trainerbattle_double(TRAINER_KAELEN_A1, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        } elif (var(VAR_BADGES) == 6){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_A2)
            trainerbattle_double(TRAINER_KAELEN_A2, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        } elif (var(VAR_BADGES) == 7){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_KAELEN_A3)
            trainerbattle_double(TRAINER_KAELEN_A3, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
        }

    // ======== KAELEN S TIER TEAM ========     
    } else {
        setvar(VAR_VGC_PREVIEW_0, SPECIES_HEATRAN)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_OKIDOGI)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_HO_OH)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_GOUGING_FIRE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_IRON_MOTH)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_MUNKIDORI)
        
        setvar(VAR_VGC_PREVIEW_LV, 85)  // preview level

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        special(WeightedSelector_On)
        cleartrainerflag(TRAINER_KAELEN_S)
        trainerbattle_double(TRAINER_KAELEN_S, Kaelen_Intro, Kaelen_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Kaelen, NO_MUSIC)
    }

}

script ForestsEdge_Gym_After_Kaelen {
    special(WeightedSelector_Off)
    special(HealPlayerParty)
    special(Vgc_RestorePartyBackup) 
    clearflag(FLAG_VGC_PENDING_RESTORE)
    
    msgbox("Your Pokemon have been healed.", MSGBOX_AUTOCLOSE)

    giveitem(ITEM_TM_TOXIC, 1)
    msgbox("That TM contains Toxic.", MSGBOX_AUTOCLOSE)
    msgbox("Have fun poisoning your opponents.", MSGBOX_AUTOCLOSE)

    msgbox(PostBattle_Kaelen, MSGBOX_AUTOCLOSE)

    if (!(flag(FLAG_BADGE01_GET))) {
        setflag(FLAG_BADGE01_GET)
        addvar(VAR_BADGES, 1)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        setvar(VAR_LEVEL_CAP, 29)
        msgbox("Level cap increased to 29.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE02_GET))) {
        setflag(FLAG_BADGE02_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 41)
        msgbox("Level cap increased to 41.", MSGBOX_DEFAULT)  
    } elif (!(flag(FLAG_BADGE03_GET))) {
        setflag(FLAG_BADGE03_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 49)
        msgbox("Level cap increased to 49.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE04_GET))) {
        setflag(FLAG_BADGE04_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 56)
        msgbox("Level cap increased to 56.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE05_GET))) {
        setflag(FLAG_BADGE05_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 71)
        msgbox("Level cap increased to 71.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE06_GET))) {
        setflag(FLAG_BADGE06_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 78)
        msgbox("Level cap increased to 78.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE07_GET))) {
        setflag(FLAG_BADGE07_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 85)
        msgbox("Level cap increased to 85.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE08_GET))) {
        setflag(FLAG_BADGE08_GET)
        msgbox("You got the Venom Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 90)
        msgbox("Level cap increased to 90.", MSGBOX_DEFAULT) 
    }

    applymovement(1, Kaelen_Exit)
    waitmovement(0)
    setflag(FLAG_KAELEN)
    applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
    waitmovement(0)
    releaseall
    end
}


//script ForestsEdge_Gym_EventScript_Orion {
//    if (!(flag(FLAG_ORION_1))) {
//        random(2)
//        copyvar(VAR_TEMP_0, VAR_RESULT)

//        if (var(VAR_TEMP_0) == 0){
//            setvar(VAR_0x8000, SPECIES_HATENNA)
//            setvar(VAR_0x8001, SPECIES_GOTHITA)
//            setvar(VAR_0x8002, SPECIES_GIRAFARIG)
//            setvar(VAR_0x8003, SPECIES_SLOWPOKE)
//            setvar(VAR_0x8004, SPECIES_ELGYEM)
//            setvar(VAR_0x8005, SPECIES_MEDITITE)
//            callnative(Vgc_ScriptShowAiPreviewFromVars)
//            waitstate()
//            trainerbattle_double(TRAINER_ORION_1, Orion_Intro, Orion_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Orion, NO_MUSIC)
//        } else {
//            setvar(VAR_0x8000, SPECIES_HATENNA)
//            setvar(VAR_0x8001, SPECIES_SPOINK)
//            setvar(VAR_0x8002, SPECIES_GIRAFARIG)
//            setvar(VAR_0x8003, SPECIES_SLOWPOKE)
//            setvar(VAR_0x8004, SPECIES_ELGYEM)
//            setvar(VAR_0x8005, SPECIES_MEDITITE)
//            callnative(Vgc_ScriptShowAiPreviewFromVars)
//            waitstate()
//            trainerbattle_double(TRAINER_ORION_2, Orion_Intro, Orion_Outro, Not_Enough_Mons, ForestsEdge_Gym_After_Orion, NO_MUSIC)
//        }
//    } else {
//        msgbox(PostBattle_Orion, MSGBOX_DEFAULT)
//    }
    
//    end
//}








text Morwen_Intro{
    "How can you win if you can't move?"
}

text Morwen_Outro{
    "Now I'm the one paralyzed."
}

text PostBattle_Morwen{
    "Good luck against Kaelen."
}

text Kaelen_Intro{
    "Hope you brought some antidote."
}

text Kaelen_Outro{
    "Ouch! I'm burned!"
}

text PostBattle_Kaelen{
    "Good luck with the rest of the gyms."
}

text Not_Enough_Mons{
    "You need at least four battle-ready Pokémon."
}
