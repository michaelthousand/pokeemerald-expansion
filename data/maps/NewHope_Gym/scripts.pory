mapscripts NewHope_Gym_MapScripts {
    MAP_SCRIPT_ON_TRANSITION: NewHope_Gym_OnTransition
}

script NewHope_Gym_OnTransition {
    setflag(FLAG_RONAN)
    setflag(FLAG_FREYA)
    end
}

script NewHope_Gym_Trigger_Right {
    lockall
    applymovement(OBJ_EVENT_ID_PLAYER, Enter_Gym_Right)
    waitmovement(0)
    delay(180)
    clearflag(FLAG_FREYA)
    addobject(LOCALID_FREYA)
    applymovement(LOCALID_FREYA, Freya_Enter)
    waitmovement(0)
    delay(60)
    goto(NewHope_Gym_EventScript_Freya)
}

script NewHope_Gym_Trigger_Left {
    lockall
    applymovement(OBJ_EVENT_ID_PLAYER, Enter_Gym_Left)
    waitmovement(0)
    delay(180)
    clearflag(FLAG_FREYA)
    addobject(LOCALID_FREYA)
    applymovement(LOCALID_FREYA, Freya_Enter)
    waitmovement(0)
    delay(60)
    goto(NewHope_Gym_EventScript_Freya)
}

script NewHope_Gym_Trigger_One {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_One)
        goto(NewHope_Gym_EventScript_Rules)
    }
}

script NewHope_Gym_Trigger_Two {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_Two)
        goto(NewHope_Gym_EventScript_Rules)
    }
}

script NewHope_Gym_Trigger_Three {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_Three)
        goto(NewHope_Gym_EventScript_Rules)
    }
}

script NewHope_Gym_Trigger_Four {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        applymovement(OBJ_EVENT_ID_PLAYER, Gym_Rules_Four)
        goto(NewHope_Gym_EventScript_Rules)
    }
}

movement Freya_Enter {
    walk_down
    walk_left * 9
    walk_down * 2
    walk_right
}

movement Freya_Exit {
    walk_left
    walk_up * 2
    walk_right * 9
    walk_up
}

movement Ronan_Enter {
    walk_down * 3
    walk_right
}

movement Ronan_Exit {
    walk_left
    walk_up * 3
}

script NewHope_Gym_EventScript_Rules {
    if (!(flag(FLAG_GYM_RULES))) {
        lockall
        faceplayer

        msgbox("Welcome, challenger. Allow me to explain\nhow Gyms work here in Valora.", MSGBOX_DEFAULT)

        msgbox("Each Gym has two Leaders, and each one\nspecializes in different styles.", MSGBOX_DEFAULT)
        msgbox("There are no junior trainers in our gyms.", MSGBOX_DEFAULT)
        msgbox("You must defeat both Leaders to earn\na badge.", MSGBOX_DEFAULT)
        msgbox("If you lose to either leader, you will\nneed to rebattle both.", MSGBOX_DEFAULT)

        msgbox("Battles are 4v4 double battles. You will\nhave a chance to see your opponent's\pPokemon before selecting from your\nown party.", MSGBOX_DEFAULT)
        msgbox("You can cancel the battle only before\nthe first gym leader to return to the\plobby and change your team.", MSGBOX_DEFAULT)
        msgbox("There's a computer to your left for this\nvery purpose.", MSGBOX_DEFAULT)
        msgbox("Between the battles, you won’t be\nallowed to change your party Pokemon.", MSGBOX_DEFAULT)
        msgbox("However, your Pokémon will be fully\nhealed before facing the second Leader.", MSGBOX_DEFAULT)
        msgbox("And you will be able to select \nnew group of four for the second battle.", MSGBOX_DEFAULT)

        msgbox("Earning a badge will also award you\npoints toward qualifying for the\pRegional Championship.", MSGBOX_DEFAULT)
        msgbox("Your first opponent is Freya.\pHer team is ultra competitive.", MSGBOX_DEFAULT)
        msgbox("Your second opponent is Ronan.\pHis team intimidates everyone.", MSGBOX_DEFAULT)
        msgbox("You have 0 badges so you are in Tier C.\pYour opponent's will not bring their best\nteams.", MSGBOX_DEFAULT)
        msgbox("But be sure to still bring a balanced\nteam...you’ll need it!", MSGBOX_DEFAULT)


        msgbox("Good luck!", MSGBOX_DEFAULT)
        setflag(FLAG_GYM_RULES)
    } else {
        msgbox("Welcome, challenger, to the New Hope\nGym!", MSGBOX_DEFAULT)
        msgbox("Your first opponent is Freya.\pHer team is ultra competitive.", MSGBOX_DEFAULT)
        msgbox("Your second opponent is Ronan.\pHis team intimidates everyone.", MSGBOX_DEFAULT)
        // ADD MESSAGE BOX ABOUT TIER
        if (var(VAR_BADGES) < 2) {
            msgbox("You are in Tier C.\pYour opponent's will not bring their best\nteams.", MSGBOX_DEFAULT)
        } elif (var(VAR_BADGES) < 6) {
            msgbox("You are in Tier B.\pYour opponent's will not bring their best\nteams...\pbut they will step up their game.", MSGBOX_DEFAULT)
        } elif (var(VAR_BADGES) > 5) {
            msgbox("You are in Tier A.\pYour opponent's will not pull any punches.", MSGBOX_DEFAULT)
        }

        msgbox("Good luck!", MSGBOX_DEFAULT)
    }

    releaseall
    end
}

script NewHope_Gym_EventScript_Freya {
    if (var(VAR_BADGES) < 2) {
        // --- AI preview ---

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        setvar(VAR_VGC_PREVIEW_0, SPECIES_PRINPLUP)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_TRAPINCH)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_PAWNIARD)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_GOTHITA)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_MANKEY)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_WATTREL)
        if (var(VAR_BADGES) == 0){
            setvar(VAR_VGC_PREVIEW_LV, 21)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 29)  // preview level
        }

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate
        if (var(VAR_RESULT) == FALSE) { end }

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 0) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_C1)
            trainerbattle_double(TRAINER_FREYA_C1, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_C2)
            trainerbattle_double(TRAINER_FREYA_C2, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        }

    } elif ((var(VAR_BADGES) > 1) && (var(VAR_BADGES) < 5)){
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_GOTHITELLE)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_OGERPON)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_MILOTIC)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_ANNIHILAPE)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_PAWNIARD)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_EMPOLEON)
        if (var(VAR_BADGES) == 2){
            setvar(VAR_VGC_PREVIEW_LV, 41)  // preview level
        } elif (var(VAR_BADGES) == 3){
            setvar(VAR_VGC_PREVIEW_LV, 49)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 56)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 2) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_B1)
            trainerbattle_double(TRAINER_FREYA_B1, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        } elif (var(VAR_BADGES) == 3){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_B2)
            trainerbattle_double(TRAINER_FREYA_B2, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_B3)
            trainerbattle_double(TRAINER_FREYA_B3, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        }
    } elif ((var(VAR_BADGES) > 4) && (var(VAR_BADGES) < 8)){
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_ANNIHILAPE)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_MILOTIC)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_TORNADUS)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_KINGAMBIT)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_ZAPDOS_GALAR)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_OGERPON)
        if (var(VAR_BADGES) == 5){
            setvar(VAR_VGC_PREVIEW_LV, 64)  // preview level
        } elif (var(VAR_BADGES) == 6){
            setvar(VAR_VGC_PREVIEW_LV, 71)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 78)  // preview level

        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 5) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_A1)
            trainerbattle_double(TRAINER_FREYA_A1, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        } elif (var(VAR_BADGES) == 6){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_A2)
            trainerbattle_double(TRAINER_FREYA_A2, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_FREYA_A3)
            trainerbattle_double(TRAINER_FREYA_A3, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
        }
    
    } else {
        setvar(VAR_VGC_PREVIEW_0, SPECIES_KINGAMBIT)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_THUNDURUS)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_OGERPON)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_TORNADUS)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_ZAPDOS_GALAR)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_ARTICUNO_GALAR)
        
        setvar(VAR_VGC_PREVIEW_LV, 85)  // preview level

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        special(WeightedSelector_On)
        cleartrainerflag(TRAINER_FREYA_S)
        trainerbattle_double(TRAINER_FREYA_S, Freya_Intro, Freya_Outro, Not_Enough_Mons, NewHope_Gym_After_Freya, NO_MUSIC)
    }
}

script NewHope_Gym_After_Freya {
    special(WeightedSelector_Off)
    special(HealPlayerParty)
    msgbox("Your Pokemon have been healed.", MSGBOX_AUTOCLOSE)

    giveitem(ITEM_TM_NASTY_PLOT, 1)
    msgbox("That TM contains Nasty Plot.", MSGBOX_AUTOCLOSE)
    msgbox("Use it to boost your own offense.", MSGBOX_AUTOCLOSE)

    msgbox(PostBattle_Freya, MSGBOX_AUTOCLOSE)

    special(Vgc_RestorePartyBackup) 
    clearflag(FLAG_VGC_PENDING_RESTORE)

    applymovement(LOCALID_FREYA, Freya_Exit)
    waitmovement(0)
    setflag(FLAG_FREYA)
    removeobject(LOCALID_FREYA)

    delay(150)
    clearflag(FLAG_RONAN)
    addobject(1)
    delay(60)
    applymovement(1, Ronan_Enter)
    waitmovement(0)

    goto(NewHope_Gym_EventScript_Ronan)
}

script NewHope_Gym_EventScript_Ronan {
    if (var(VAR_BADGES) < 2) {
        setvar(VAR_VGC_PREVIEW_0, SPECIES_GROWLITHE)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_SANDILE)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_STARAVIA)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_SNUBBULL)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_MIGHTYENA)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_HOUNDOUR)
        if (var(VAR_BADGES) == 0){
            setvar(VAR_VGC_PREVIEW_LV, 21)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 29)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        if (var(VAR_BADGES) == 0)  {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_C1)
            trainerbattle_double(TRAINER_RONAN_C1, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_C2)
            trainerbattle_double(TRAINER_RONAN_C2, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        }
    } elif ((var(VAR_BADGES) > 1) && (var(VAR_BADGES) < 5)) {
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_PORYGON2)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_ARCANINE)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_GYARADOS)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_MAUSHOLD_FOUR)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_ANNIHILAPE)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_INCINEROAR)
        if (var(VAR_BADGES) == 2){
            setvar(VAR_VGC_PREVIEW_LV, 41)  // preview level
        } elif (var(VAR_BADGES) == 3){
            setvar(VAR_VGC_PREVIEW_LV, 49)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 56)  // preview level
        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 2) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_B1)
            trainerbattle_double(TRAINER_RONAN_B1, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        } elif (var(VAR_BADGES) == 3){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_B2)
            trainerbattle_double(TRAINER_RONAN_B2, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_B3)
            trainerbattle_double(TRAINER_RONAN_B3, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        }
    } elif ((var(VAR_BADGES) > 4) && (var(VAR_BADGES) < 8)){
        // --- AI preview ---
        setvar(VAR_VGC_PREVIEW_0, SPECIES_LANDORUS_THERIAN)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_INCINEROAR)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_ANNIHILAPE)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_MAUSHOLD_FOUR)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_SALAMENCE)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_GYARADOS)
        if (var(VAR_BADGES) == 5){
            setvar(VAR_VGC_PREVIEW_LV, 64)  // preview level
        } elif (var(VAR_BADGES) == 6){
            setvar(VAR_VGC_PREVIEW_LV, 71)  // preview level
        } else {
            setvar(VAR_VGC_PREVIEW_LV, 78)  // preview level

        }

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)

        // Now start the actual fight
        if (var(VAR_BADGES) == 5) {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_A1)
            trainerbattle_double(TRAINER_RONAN_A1, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        } elif (var(VAR_BADGES) == 6){
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_A2)
            trainerbattle_double(TRAINER_RONAN_A2, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        } else {
            special(WeightedSelector_On)
            cleartrainerflag(TRAINER_RONAN_A3)
            trainerbattle_double(TRAINER_RONAN_A3, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
        }
    } else {
        setvar(VAR_VGC_PREVIEW_0, SPECIES_LANDORUS_THERIAN)
        setvar(VAR_VGC_PREVIEW_1, SPECIES_INCINEROAR)
        setvar(VAR_VGC_PREVIEW_2, SPECIES_ANNIHILAPE)
        setvar(VAR_VGC_PREVIEW_3, SPECIES_MAUSHOLD_FOUR)
        setvar(VAR_VGC_PREVIEW_4, SPECIES_SALAMENCE)
        setvar(VAR_VGC_PREVIEW_5, SPECIES_GYARADOS)
        
        setvar(VAR_VGC_PREVIEW_LV, 85)  // preview level

        msgbox("Previewing opponent's team...", MSGBOX_DEFAULT)
        msgbox("Press B when ready to battle.", MSGBOX_DEFAULT)

        special(StartVgcSummaryPreviewFromVars)
        compare(VAR_RESULT, TRUE)
        waitstate

        msgbox("Are you ready to battle?", MSGBOX_YESNO)
        if (var(VAR_RESULT) == NO) {
            // need to hide trainer again
            closemessage
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        msgbox("Choose your pokemon.", MSGBOX_DEFAULT)

        special(Vgc_SavePartyBackup)
        setflag(FLAG_VGC_PENDING_RESTORE)

        // --- Player picks exactly 4 using the vanilla party UI (no Frontier state) ---
        special(Vgc_ChoosePartyOfFour)   // opens the same UI the Frontier selector uses
        waitstate

        // If the player canceled, bail early
        if (var(VAR_RESULT) != 0) {
            //special(Vgc_RestorePartyBackup)
            clearflag(FLAG_VGC_PENDING_RESTORE)
            applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
            waitmovement(0)
            end
        }

        // Build/trim the active party to the 4 chosen mons (indices in VAR_0x8000..VAR_0x8003)
        callnative(Vgc_BuildPartyFrom4Indices)


        special(WeightedSelector_On)
        cleartrainerflag(TRAINER_RONAN_S)
        trainerbattle_double(TRAINER_RONAN_S, Ronan_Intro, Ronan_Outro, Not_Enough_Mons, NewHope_Gym_After_Ronan, NO_MUSIC)
    }

}

script NewHope_Gym_After_Ronan {
    special(WeightedSelector_Off)
    special(HealPlayerParty)
    special(Vgc_RestorePartyBackup) 
    clearflag(FLAG_VGC_PENDING_RESTORE)
    
    msgbox("Your Pokemon have been healed.", MSGBOX_AUTOCLOSE)

    giveitem(ITEM_TM_SWORDS_DANCE, 1)
    msgbox("That TM contains Swords Dance.", MSGBOX_AUTOCLOSE)
    msgbox("It will help you recover from Intimidate", MSGBOX_AUTOCLOSE)

    msgbox(PostBattle_Ronan, MSGBOX_AUTOCLOSE)

    if (!(flag(FLAG_BADGE01_GET))) {
        setflag(FLAG_BADGE01_GET)
        addvar(VAR_BADGES, 1)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        setvar(VAR_LEVEL_CAP, 29)
        msgbox("Level cap increased to 29.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE02_GET))) {
        setflag(FLAG_BADGE02_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 41)
        msgbox("Level cap increased to 41.", MSGBOX_DEFAULT)  
    } elif (!(flag(FLAG_BADGE03_GET))) {
        setflag(FLAG_BADGE03_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 49)
        msgbox("Level cap increased to 49.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE04_GET))) {
        setflag(FLAG_BADGE04_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 56)
        msgbox("Level cap increased to 56.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE05_GET))) {
        setflag(FLAG_BADGE05_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 64)
        msgbox("Level cap increased to 64.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE06_GET))) {
        setflag(FLAG_BADGE06_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 71)
        msgbox("Level cap increased to 71.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE07_GET))) {
        setflag(FLAG_BADGE07_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 78)
        msgbox("Level cap increased to 78.", MSGBOX_DEFAULT) 
    } elif (!(flag(FLAG_BADGE08_GET))) {
        setflag(FLAG_BADGE08_GET)
        msgbox("You got the Momentum Badge!", MSGBOX_DEFAULT)
        addvar(VAR_BADGES, 1)
        setvar(VAR_LEVEL_CAP, 85)
        msgbox("Level cap increased to 85.", MSGBOX_DEFAULT) 
    }

    applymovement(1, Ronan_Exit)
    waitmovement(0)
    setflag(FLAG_RONAN)
    applymovement(OBJ_EVENT_ID_PLAYER, Exit_Gym)
    waitmovement(0)
    releaseall
    end
}

text Freya_Intro{
    "My Pokemon will outcompete yours!"
}

text Freya_Outro{
    "Now I'm the one paralyzed."
}

text PostBattle_Freya{
    "Good luck against Ronan."
}

text Ronan_Intro{
    "Hope you brought some antidote."
}

text Ronan_Outro{
    "Ouch! I'm burned!"
}

text PostBattle_Ronan{
    "Good luck with the rest of the gyms."
}



